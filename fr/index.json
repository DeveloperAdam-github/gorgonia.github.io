[{"uri":"/fr/how-to/dataframe/","title":"Créer un tensor depuis un Dataframe (gota)","tags":[],"description":"","content":" Cet article explique comment créer un tenseur depuis un dataframe en utilisant le package gota.\nLe but est de lire un fichier csv et de créer un objet *tensor.Dense de forme (2,2).\nCreation du dataframe depuis le fichier csv Considerons un ficier csv avec le contenu suivant:\nsepal_length,sepal_width,petal_length,petal_width,species 5.1 ,3.5 ,1.4 ,0.2 ,setosa 4.9 ,3.0 ,1.4 ,0.2 ,setosa 4.7 ,3.2 ,1.3 ,0.2 ,setosa 4.6 ,3.1 ,1.5 ,0.2 ,setosa 5.0 ,3.6 ,1.4 ,0.2 ,setosa ... Ceci est un extrait du Iris flower data set. Une copie du dataset peut être téléchargée ici\n Nous voulons créer un tenseur qui contient toutes les valeurs sauf la colonne \u0026ldquo;species\u0026rdquo;.\nCreation du dataframe avec gota le package dataframe de gota propose une fonction ReadCSV qui prend pour argument un io.Reader.\nf, err := os.Open(\u0026#34;iris.csv\u0026#34;) if err != nil { log.Fatal(err) } defer f.Close() df := dataframe.ReadCSV(f) df est un DataFrame qui remferme toutes les données présentes dans le fichier.\ngota utilise la première ligne du fichier csv pour référencer les colonnes dans le dataframe\n Supprimons à présent la colonne species du dataframe:\nxDF := df.Drop(\u0026#34;species\u0026#34;) Conversion du dataframe vers une matrice Pour simplifier les choses, nous allons convertir le dataframe en une Matrix telle que définie dans le package gonum (cf la godoc de Matrix). Matrix est une interface. Cependant, la structure Dataframe de gota ne remplit pas le contrat d\u0026rsquo;interface Matrix Nous allons donc encapsuler l\u0026rsquo;objet dans une structure de plus haut niveau et nous allons implémenter les fonctions nécessaire au contrat d\u0026rsquo;interface telle que décrit dans la documentation de gota:\ntype matrix struct { dataframe.DataFrame } func (m matrix) At(i, j int) float64 { return m.Elem(i, j).Float() } func (m matrix) T() mat.Matrix { return mat.Transpose{Matrix: m} } Creation du tenseur Nous pouvons à présent créer un tenseur *Dense grâce à la fonction tensor.FromMat64 du package tensor en encapsulant le dataframe dans la structure matrix.\nxT := tensor.FromMat64(mat.DenseCopyOf(\u0026amp;matrix{xDF}))"},{"uri":"/fr/","title":"Documentation du thème Hugo Learn","tags":[],"description":"","content":""},{"uri":"/fr/how-to/","title":"How-tos","tags":[],"description":"","content":""},{"uri":"/fr/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"/fr/tags/","title":"Tags","tags":[],"description":"","content":""}]